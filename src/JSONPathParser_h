#include <string.h>
#include "QueryAutomaton.h"

#define MAX_KEY 100

void parse(char* query, QueryAutomaton &qa) {
    int length = strlen(query);
    int state = 1;
    int query_state = 1;
    char keyBuffer[MAX_KEY];
    for (int i = 0; i < length; ++i) {
        char ch = query[i];
        switch (state) {
            case 0:  // begin of the path
                if (ch == '.') {
                    state = 1;
                }
                break;
            case 1:  // in object
                int key_end = 0;
                while (ch != '.' && ch != '[') {
                    keyBuffer[key_end++] = ch;
                    if (i + 1 == length) break;
                    ch = query[++i];
                }
                keyBuffer[key_end] = '\0';
                if (i < length) {
                    if (ch == '[') {
                        state = 2;
                        // current query state -> expected key-array pair
                        qa.addStateTransInfo(query_state, false, ARRAY, NONE, keyBuffer, query_state + 1);
                        // state transition for [
                        qa.addStateTransInfo(query_state + 1, false, NONE, NONE, NULL, query_state + 2);
                        query_state += 2;
                        // break;
                    } else if (ch == '.') {
                        state = 1;
                        qa.addStateTransInfo(query_state, false, OBJECT, NONE, keyBuffer, query_state + 1);
                        ++query_state; 
                        // break;
                    }
                } else {
                    // output info
                    qa.addStateTransInfo(query_state, false, PRIMITIVE, NONE, keyBuffer, query_state + 1);
                    qa.addStateTransInfo(query_state + 1, true, NONE, NONE, NULL, query_state + 1);
                    /// query_state += 2;
                }
                break;
            case 2:  // in array
                int start_idx = 0;
                int end_idx = -1;
                while (ch != ']') {
                    if (i + 1 == length) break;
                    ch = query[++i]; 
                }
                if (i < length) {
                    if (ch == '.') {
                        qa.addStateTransInfo(query_state, false, OBJECT, NONE, keyBuffer, query_state + 1); 
                    } else if (ch == '[') {

                    } 
                } else {
                    if (ch == '.') {

                    } else if (ch == '[') {

                    }
               }
                

            
        }
    } 
}
